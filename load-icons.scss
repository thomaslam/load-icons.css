/*=====================================
=            Custom colors            =
=====================================*/
/**
*
* SET YOUR $YOUR-COLOR
*
**/
$red: #E50C4E;
$blue: #104CE5;
$white: #FFF;
// $your-color: #CCCCCC;

/**
*
* SET $COLOR TO $YOUR-COLOR, DEFAULT IS $red
*
**/

$color: $red;
// $color: $your-color;

/*-----  End of Custom colors  ------*/








/*===================================================================
=            Feel free to customize and recompile to css            =
===================================================================*/








/*=================================
=            Variables            =
=================================*/
$zero: 0;
$one: 1;
$two: 2;
$three: 3;
$four: 4;


/*-----  End of Variables  ------*/



/*==============================
=            Mixins            =
==============================*/
@mixin animate($style, $duration, $iteration, $delay, $function) {
  animation: $style $duration $iteration $delay $function;
}

@mixin dotAnimate($style) {
  .dot:nth-last-child(1) {
    @include animate($style, .6s, infinite, 0.1s, linear);
  }
  .dot:nth-last-child(2) {
    @include animate($style, .6s, infinite, 0.2s, linear);
  }
  .dot:nth-last-child(3) {
    @include animate($style, .6s, infinite, 0.3s, linear);
  }
}

@mixin rectAnimate($style, $delay-order) {
  .rect:nth-last-child(1) {
    @include animate($style, 1.2s, infinite, #{nth($delay-order, 1)}, ease-in-out);
  }
  .rect:nth-last-child(2) {
    @include animate($style, 1.2s, infinite, #{nth($delay-order, 2)}, ease-in-out);
  }
  .rect:nth-last-child(3) {
    @include animate($style, 1.2s, infinite, #{nth($delay-order, 3)}, ease-in-out);
  }
  .rect:nth-last-child(4) {
    @include animate($style, 1.2s, infinite, #{nth($delay-order, 4)}, ease-in-out);
  }
  .rect:nth-last-child(5) {
    @include animate($style, 1.2s, infinite, #{nth($delay-order, 5)}, ease-in-out);
  }
}
/*-----  End of Mixins  ------*/



/*========================================
=            Spinning circles            =
========================================*/
.circle-spin {
  background-color: $white;
  border: 5px solid $color;
  border-radius: 50px;
  width: 50px;
  height: 50px;
  margin: 0 auto;
  @include animate(spin, 0.75s, infinite, 0s, linear);
}

.spin-long {
  @extend .circle-spin;
  border-top: 5px solid $white;
  border-left: 5px solid $white;
}

.spin-short {
  @extend .circle-spin;
  border-right: 5px solid $white;
  border-left: 5px solid $white;
}

.pulse {
  @include animate(spinPulse, 0.75s, infinite, 0s, linear);
}
/*-----  End of Spinning circles  ------*/




/*============================
=            Dots            =
============================*/
.dots {
  width: 90px;
  height: 50px;
  margin: 0 auto;
  text-align: center;
}

.dot {
  vertical-align: -75%;
  width: 15px;
  height: 15px;
  border-radius: 15px;
  background-color: $color;
  border: 5px solid $color;
  display: inline-block;
}

.bounce-dots {
  @extend .dots;
  @include dotAnimate(bounce);
}

.pulse-dots {
  @extend .dots;
  @include dotAnimate(dotPulse);
}

.fade-dots {
  @extend .dots;
  @include dotAnimate(dotFade);
}
/*-----  End of Dots  ------*/



/*=============================
=            Rects            =
=============================*/
.rects {
  @extend .dots;
}

.rect {
  height: 100%;
  width: 6px;
  display: inline-block;
  background-color: $color;
  border-radius: 5px;
}

$order: (0s, -1.1s, -1.0s, -0.9s, -0.8s);
.wave-rects {
  @extend .rects;
  @include rectAnimate(rectScale, $order);
}

$order-2: (-0.2s, -0.4s, -0.6s, -0.4s, -0.2s);
.center-out-rects {
  @extend .rects;
  @include rectAnimate(rectScale, $order-2);
}

/*-----  End of Rects  ------*/



/*=================================
=            keyframes            =
=================================*/
@keyframes spin {
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}

@keyframes spinPulse {
  0% { transform: rotate(160deg); opacity: 0; }
  50% { transform: rotate(100deg); opacity: 1; }
  100% { transform: rotate(-200deg); opacity: 0; };
}

@keyframes bounce {
  0% { transform: translate(0,0); }
  20%, 40% { transform: translate(0,10px); }
  60%, 80% { transform: translate(0,-10px); }
  100% { transform: translate(0,0); }
}

@keyframes dotPulse {
  0% { transform: scale(1); }
  45% { transform: scale(0.1); }
  80% { transform: scale(1); }
}

@keyframes dotFade {
  50% { opacity: 0.2; transform: scale(0.8); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes rectScale {
  0% { transform: scaley(1); }
  50% { transform: scaley(0.4); }
  100% { transform: scaley(1); }
}
/*-----  End of keyframes  ------*/
